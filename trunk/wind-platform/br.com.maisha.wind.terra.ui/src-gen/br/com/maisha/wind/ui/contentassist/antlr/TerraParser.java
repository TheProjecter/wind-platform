/*
* generated by Xtext
*/
package br.com.maisha.wind.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import br.com.maisha.wind.services.TerraGrammarAccess;

public class TerraParser extends AbstractContentAssistParser {
	
	@Inject
	private TerraGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected br.com.maisha.wind.ui.contentassist.antlr.internal.InternalTerraParser createParser() {
		br.com.maisha.wind.ui.contentassist.antlr.internal.InternalTerraParser result = new br.com.maisha.wind.ui.contentassist.antlr.internal.InternalTerraParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAttributePropertyAccess().getAlternatives_2(), "rule__AttributeProperty__Alternatives_2");
					put(grammarAccess.getOperationPropertyAccess().getAlternatives_2(), "rule__OperationProperty__Alternatives_2");
					put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
					put(grammarAccess.getPresentationTypeAccess().getAlternatives(), "rule__PresentationType__Alternatives");
					put(grammarAccess.getAttributePropertyNameAccess().getAlternatives(), "rule__AttributePropertyName__Alternatives");
					put(grammarAccess.getOperationPropertyNameAccess().getAlternatives(), "rule__OperationPropertyName__Alternatives");
					put(grammarAccess.getObjectPropertyNameAccess().getAlternatives(), "rule__ObjectPropertyName__Alternatives");
					put(grammarAccess.getDomainObjectAccess().getGroup_0(), "rule__DomainObject__Group_0__0");
					put(grammarAccess.getDomainObjectAccess().getGroup_4(), "rule__DomainObject__Group_4__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getPackageDeclarationAccess().getGroup(), "rule__PackageDeclaration__Group__0");
					put(grammarAccess.getObjectPropertyAccess().getGroup(), "rule__ObjectProperty__Group__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getAttributePropertyAccess().getGroup(), "rule__AttributeProperty__Group__0");
					put(grammarAccess.getAttributePropertyAccess().getGroup_2_2(), "rule__AttributeProperty__Group_2_2__0");
					put(grammarAccess.getOperationAccess().getGroup(), "rule__Operation__Group__0");
					put(grammarAccess.getOperationPropertyAccess().getGroup(), "rule__OperationProperty__Group__0");
					put(grammarAccess.getValidationAccess().getGroup(), "rule__Validation__Group__0");
					put(grammarAccess.getArrayAccess().getGroup(), "rule__Array__Group__0");
					put(grammarAccess.getArrayAccess().getGroup_3(), "rule__Array__Group_3__0");
					put(grammarAccess.getValidationRuleAccess().getGroup(), "rule__ValidationRule__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getDomainObjectAccess().getPackageAssignment_0_0(), "rule__DomainObject__PackageAssignment_0_0");
					put(grammarAccess.getDomainObjectAccess().getImportsAssignment_0_1(), "rule__DomainObject__ImportsAssignment_0_1");
					put(grammarAccess.getDomainObjectAccess().getNameAssignment_0_3(), "rule__DomainObject__NameAssignment_0_3");
					put(grammarAccess.getDomainObjectAccess().getLabelAssignment_0_4(), "rule__DomainObject__LabelAssignment_0_4");
					put(grammarAccess.getDomainObjectAccess().getPropertiesAssignment_1(), "rule__DomainObject__PropertiesAssignment_1");
					put(grammarAccess.getDomainObjectAccess().getAttributesAssignment_2(), "rule__DomainObject__AttributesAssignment_2");
					put(grammarAccess.getDomainObjectAccess().getOperationsAssignment_3(), "rule__DomainObject__OperationsAssignment_3");
					put(grammarAccess.getDomainObjectAccess().getValidationsAssignment_4_0(), "rule__DomainObject__ValidationsAssignment_4_0");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1(), "rule__PackageDeclaration__NameAssignment_1");
					put(grammarAccess.getObjectPropertyAccess().getNameAssignment_0(), "rule__ObjectProperty__NameAssignment_0");
					put(grammarAccess.getObjectPropertyAccess().getValueAssignment_2(), "rule__ObjectProperty__ValueAssignment_2");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_0(), "rule__Attribute__TypeAssignment_0");
					put(grammarAccess.getAttributeAccess().getRefAssignment_1(), "rule__Attribute__RefAssignment_1");
					put(grammarAccess.getAttributeAccess().getLabelAssignment_2(), "rule__Attribute__LabelAssignment_2");
					put(grammarAccess.getAttributeAccess().getPropertiesAssignment_4(), "rule__Attribute__PropertiesAssignment_4");
					put(grammarAccess.getAttributePropertyAccess().getNameAssignment_0(), "rule__AttributeProperty__NameAssignment_0");
					put(grammarAccess.getAttributePropertyAccess().getValidValuesAssignment_2_0(), "rule__AttributeProperty__ValidValuesAssignment_2_0");
					put(grammarAccess.getAttributePropertyAccess().getValueAssignment_2_1(), "rule__AttributeProperty__ValueAssignment_2_1");
					put(grammarAccess.getAttributePropertyAccess().getValueAssignment_2_2_0(), "rule__AttributeProperty__ValueAssignment_2_2_0");
					put(grammarAccess.getAttributePropertyAccess().getValidValuesAssignment_2_2_2(), "rule__AttributeProperty__ValidValuesAssignment_2_2_2");
					put(grammarAccess.getOperationAccess().getTypeAssignment_1(), "rule__Operation__TypeAssignment_1");
					put(grammarAccess.getOperationAccess().getNameAssignment_2(), "rule__Operation__NameAssignment_2");
					put(grammarAccess.getOperationAccess().getLabelAssignment_3(), "rule__Operation__LabelAssignment_3");
					put(grammarAccess.getOperationAccess().getPropertiesAssignment_5(), "rule__Operation__PropertiesAssignment_5");
					put(grammarAccess.getOperationPropertyAccess().getNameAssignment_0(), "rule__OperationProperty__NameAssignment_0");
					put(grammarAccess.getOperationPropertyAccess().getValidValuesAssignment_2_0(), "rule__OperationProperty__ValidValuesAssignment_2_0");
					put(grammarAccess.getOperationPropertyAccess().getValueAssignment_2_1(), "rule__OperationProperty__ValueAssignment_2_1");
					put(grammarAccess.getValidationAccess().getRefAssignment_1(), "rule__Validation__RefAssignment_1");
					put(grammarAccess.getValidationAccess().getRulesAssignment_3(), "rule__Validation__RulesAssignment_3");
					put(grammarAccess.getArrayAccess().getValuesAssignment_2(), "rule__Array__ValuesAssignment_2");
					put(grammarAccess.getArrayAccess().getValuesAssignment_3_1(), "rule__Array__ValuesAssignment_3_1");
					put(grammarAccess.getValidationRuleAccess().getMessageKeyAssignment_0(), "rule__ValidationRule__MessageKeyAssignment_0");
					put(grammarAccess.getValidationRuleAccess().getExpressionAssignment_2(), "rule__ValidationRule__ExpressionAssignment_2");
					put(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), "rule__DomainObject__UnorderedGroup");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			br.com.maisha.wind.ui.contentassist.antlr.internal.InternalTerraParser typedParser = (br.com.maisha.wind.ui.contentassist.antlr.internal.InternalTerraParser) parser;
			typedParser.entryRuleDomainObject();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TerraGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TerraGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
