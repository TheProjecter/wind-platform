/*
* generated by Xtext
*/
grammar InternalTerra;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package br.com.maisha.wind.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.com.maisha.wind.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import br.com.maisha.wind.services.TerraGrammarAccess;

}

@parser::members {
 
 	private TerraGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TerraGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDomainObject
entryRuleDomainObject 
:
{ before(grammarAccess.getDomainObjectRule()); }
	 ruleDomainObject
{ after(grammarAccess.getDomainObjectRule()); } 
	 EOF 
;

// Rule DomainObject
ruleDomainObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainObjectAccess().getUnorderedGroup()); }
(rule__DomainObject__UnorderedGroup)
{ after(grammarAccess.getDomainObjectAccess().getUnorderedGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration 
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
(rule__PackageDeclaration__Group__0)
{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectProperty
entryRuleObjectProperty 
:
{ before(grammarAccess.getObjectPropertyRule()); }
	 ruleObjectProperty
{ after(grammarAccess.getObjectPropertyRule()); } 
	 EOF 
;

// Rule ObjectProperty
ruleObjectProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectPropertyAccess().getGroup()); }
(rule__ObjectProperty__Group__0)
{ after(grammarAccess.getObjectPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeProperty
entryRuleAttributeProperty 
:
{ before(grammarAccess.getAttributePropertyRule()); }
	 ruleAttributeProperty
{ after(grammarAccess.getAttributePropertyRule()); } 
	 EOF 
;

// Rule AttributeProperty
ruleAttributeProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributePropertyAccess().getGroup()); }
(rule__AttributeProperty__Group__0)
{ after(grammarAccess.getAttributePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationProperty
entryRuleOperationProperty 
:
{ before(grammarAccess.getOperationPropertyRule()); }
	 ruleOperationProperty
{ after(grammarAccess.getOperationPropertyRule()); } 
	 EOF 
;

// Rule OperationProperty
ruleOperationProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationPropertyAccess().getGroup()); }
(rule__OperationProperty__Group__0)
{ after(grammarAccess.getOperationPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidation
entryRuleValidation 
:
{ before(grammarAccess.getValidationRule()); }
	 ruleValidation
{ after(grammarAccess.getValidationRule()); } 
	 EOF 
;

// Rule Validation
ruleValidation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidationAccess().getGroup()); }
(rule__Validation__Group__0)
{ after(grammarAccess.getValidationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidationRule
entryRuleValidationRule 
:
{ before(grammarAccess.getValidationRuleRule()); }
	 ruleValidationRule
{ after(grammarAccess.getValidationRuleRule()); } 
	 EOF 
;

// Rule ValidationRule
ruleValidationRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidationRuleAccess().getGroup()); }
(rule__ValidationRule__Group__0)
{ after(grammarAccess.getValidationRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule OperationType
ruleOperationType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeAccess().getGroovyEnumLiteralDeclaration()); }
(	'groovy' 
)
{ after(grammarAccess.getOperationTypeAccess().getGroovyEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Rule AttributePropertyName
ruleAttributePropertyName
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyNameAccess().getAlternatives()); }
(rule__AttributePropertyName__Alternatives)
{ after(grammarAccess.getAttributePropertyNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OperationPropertyName
ruleOperationPropertyName
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationPropertyNameAccess().getAlternatives()); }
(rule__OperationPropertyName__Alternatives)
{ after(grammarAccess.getOperationPropertyNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ObjectPropertyName
ruleObjectPropertyName
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectPropertyNameAccess().getAlternatives()); }
(rule__ObjectPropertyName__Alternatives)
{ after(grammarAccess.getObjectPropertyNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AttributeProperty__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getValidValuesAssignment_2_0()); }
(rule__AttributeProperty__ValidValuesAssignment_2_0)
{ after(grammarAccess.getAttributePropertyAccess().getValidValuesAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getAttributePropertyAccess().getValueAssignment_2_1()); }
(rule__AttributeProperty__ValueAssignment_2_1)
{ after(grammarAccess.getAttributePropertyAccess().getValueAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getAttributePropertyAccess().getGroup_2_2()); }
(rule__AttributeProperty__Group_2_2__0)
{ after(grammarAccess.getAttributePropertyAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationProperty__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationPropertyAccess().getValidValuesAssignment_2_0()); }
(rule__OperationProperty__ValidValuesAssignment_2_0)
{ after(grammarAccess.getOperationPropertyAccess().getValidValuesAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getOperationPropertyAccess().getValueAssignment_2_1()); }
(rule__OperationProperty__ValueAssignment_2_1)
{ after(grammarAccess.getOperationPropertyAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getValueAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getValueAccess().getFalseKeyword_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getValidIDParserRuleCall_3()); }
	ruleValidID
{ after(grammarAccess.getValueAccess().getValidIDParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getValueAccess().getEXPRESSIONTerminalRuleCall_4()); }
	RULE_EXPRESSION
{ after(grammarAccess.getValueAccess().getEXPRESSIONTerminalRuleCall_4()); }
)

    |(
{ before(grammarAccess.getValueAccess().getNUMBERTerminalRuleCall_5()); }
	RULE_NUMBER
{ after(grammarAccess.getValueAccess().getNUMBERTerminalRuleCall_5()); }
)

    |(
{ before(grammarAccess.getValueAccess().getPATHTerminalRuleCall_6()); }
	RULE_PATH
{ after(grammarAccess.getValueAccess().getPATHTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributePropertyName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyNameAccess().getXEnumLiteralDeclaration_0()); }
(	'x' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getXEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getYEnumLiteralDeclaration_1()); }
(	'y' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getYEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getColspanEnumLiteralDeclaration_2()); }
(	'colspan' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getColspanEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getRowspanEnumLiteralDeclaration_3()); }
(	'rowspan' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getRowspanEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getDisabledEnumLiteralDeclaration_4()); }
(	'disabled' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getDisabledEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getIconEnumLiteralDeclaration_5()); }
(	'icon' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getIconEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getWidthEnumLiteralDeclaration_6()); }
(	'width' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getWidthEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getHeightEnumLiteralDeclaration_7()); }
(	'height' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getHeightEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getTooltipEnumLiteralDeclaration_8()); }
(	'tooltip' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getTooltipEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getGroupEnumLiteralDeclaration_9()); }
(	'group' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getGroupEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getVisibleInEditionEnumLiteralDeclaration_10()); }
(	'visibleInEdition' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getVisibleInEditionEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getVisibleInGridEnumLiteralDeclaration_11()); }
(	'visibleInGrid' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getVisibleInGridEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getContentEnumLiteralDeclaration_12()); }
(	'content' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getContentEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getValueEnumLiteralDeclaration_13()); }
(	'value' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getValueEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getValidValuesEnumLiteralDeclaration_14()); }
(	'validValues' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getValidValuesEnumLiteralDeclaration_14()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getValidationEnumLiteralDeclaration_15()); }
(	'validation' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getValidationEnumLiteralDeclaration_15()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getRequiredEnumLiteralDeclaration_16()); }
(	'required' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getRequiredEnumLiteralDeclaration_16()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getMax_lengthEnumLiteralDeclaration_17()); }
(	'max_length' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getMax_lengthEnumLiteralDeclaration_17()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getMin_lengthEnumLiteralDeclaration_18()); }
(	'min_length' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getMin_lengthEnumLiteralDeclaration_18()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getRangeEnumLiteralDeclaration_19()); }
(	'range' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getRangeEnumLiteralDeclaration_19()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getMaskEnumLiteralDeclaration_20()); }
(	'mask' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getMaskEnumLiteralDeclaration_20()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getEventEnumLiteralDeclaration_21()); }
(	'event' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getEventEnumLiteralDeclaration_21()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getToStringEnumLiteralDeclaration_22()); }
(	'toString' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getToStringEnumLiteralDeclaration_22()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getOnetomanyEnumLiteralDeclaration_23()); }
(	'onetomany' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getOnetomanyEnumLiteralDeclaration_23()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getManytooneEnumLiteralDeclaration_24()); }
(	'manytoone' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getManytooneEnumLiteralDeclaration_24()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getTransientEnumLiteralDeclaration_25()); }
(	'transient' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getTransientEnumLiteralDeclaration_25()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getFolderEnumLiteralDeclaration_26()); }
(	'folder' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getFolderEnumLiteralDeclaration_26()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getPresentation_typeEnumLiteralDeclaration_27()); }
(	'presentation_type' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getPresentation_typeEnumLiteralDeclaration_27()); }
)

    |(
{ before(grammarAccess.getAttributePropertyNameAccess().getSequenceEnumLiteralDeclaration_28()); }
(	'sequence' 
)
{ after(grammarAccess.getAttributePropertyNameAccess().getSequenceEnumLiteralDeclaration_28()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPropertyName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationPropertyNameAccess().getDisabledEnumLiteralDeclaration_0()); }
(	'disabled' 
)
{ after(grammarAccess.getOperationPropertyNameAccess().getDisabledEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOperationPropertyNameAccess().getIconEnumLiteralDeclaration_1()); }
(	'icon' 
)
{ after(grammarAccess.getOperationPropertyNameAccess().getIconEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOperationPropertyNameAccess().getTooltipEnumLiteralDeclaration_2()); }
(	'tooltip' 
)
{ after(grammarAccess.getOperationPropertyNameAccess().getTooltipEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getOperationPropertyNameAccess().getVisibleEnumLiteralDeclaration_3()); }
(	'visible' 
)
{ after(grammarAccess.getOperationPropertyNameAccess().getVisibleEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getOperationPropertyNameAccess().getFileEnumLiteralDeclaration_4()); }
(	'file' 
)
{ after(grammarAccess.getOperationPropertyNameAccess().getFileEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getOperationPropertyNameAccess().getValidWhenEnumLiteralDeclaration_5()); }
(	'validWhen' 
)
{ after(grammarAccess.getOperationPropertyNameAccess().getValidWhenEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getOperationPropertyNameAccess().getIs_filterEnumLiteralDeclaration_6()); }
(	'is_filter' 
)
{ after(grammarAccess.getOperationPropertyNameAccess().getIs_filterEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getOperationPropertyNameAccess().getValidateEnumLiteralDeclaration_7()); }
(	'validate' 
)
{ after(grammarAccess.getOperationPropertyNameAccess().getValidateEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPropertyName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectPropertyNameAccess().getOpen_filteringEnumLiteralDeclaration_0()); }
(	'open_filtering' 
)
{ after(grammarAccess.getObjectPropertyNameAccess().getOpen_filteringEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getObjectPropertyNameAccess().getEvent_handlerEnumLiteralDeclaration_1()); }
(	'event_handler' 
)
{ after(grammarAccess.getObjectPropertyNameAccess().getEvent_handlerEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DomainObject__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__Group_0__0__Impl
	rule__DomainObject__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getPackageAssignment_0_0()); }
(rule__DomainObject__PackageAssignment_0_0)
{ after(grammarAccess.getDomainObjectAccess().getPackageAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__Group_0__1__Impl
	rule__DomainObject__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getImportsAssignment_0_1()); }
(rule__DomainObject__ImportsAssignment_0_1)*
{ after(grammarAccess.getDomainObjectAccess().getImportsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__Group_0__2__Impl
	rule__DomainObject__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getDomain_objectKeyword_0_2()); }

	'domain_object' 

{ after(grammarAccess.getDomainObjectAccess().getDomain_objectKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__Group_0__3__Impl
	rule__DomainObject__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getNameAssignment_0_3()); }
(rule__DomainObject__NameAssignment_0_3)
{ after(grammarAccess.getDomainObjectAccess().getNameAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__Group_0__4__Impl
	rule__DomainObject__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getLabelAssignment_0_4()); }
(rule__DomainObject__LabelAssignment_0_4)
{ after(grammarAccess.getDomainObjectAccess().getLabelAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getLeftCurlyBracketKeyword_0_5()); }

	'{' 

{ after(grammarAccess.getDomainObjectAccess().getLeftCurlyBracketKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DomainObject__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__Group_4__0__Impl
	rule__DomainObject__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getValidationsAssignment_4_0()); }
(rule__DomainObject__ValidationsAssignment_4_0)*
{ after(grammarAccess.getDomainObjectAccess().getValidationsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getRightCurlyBracketKeyword_4_1()); }

	'}' 

{ after(grammarAccess.getDomainObjectAccess().getRightCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
(rule__PackageDeclaration__NameAssignment_1)
{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getPackageDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ObjectProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectProperty__Group__0__Impl
	rule__ObjectProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectPropertyAccess().getNameAssignment_0()); }
(rule__ObjectProperty__NameAssignment_0)
{ after(grammarAccess.getObjectPropertyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectProperty__Group__1__Impl
	rule__ObjectProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectPropertyAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getObjectPropertyAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectPropertyAccess().getValueAssignment_2()); }
(rule__ObjectProperty__ValueAssignment_2)
{ after(grammarAccess.getObjectPropertyAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_0()); }
(rule__Attribute__TypeAssignment_0)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getRefAssignment_1()); }
(rule__Attribute__RefAssignment_1)
{ after(grammarAccess.getAttributeAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getLabelAssignment_2()); }
(rule__Attribute__LabelAssignment_2)
{ after(grammarAccess.getAttributeAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
	rule__Attribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getPropertiesAssignment_4()); }
(rule__Attribute__PropertiesAssignment_4)*
{ after(grammarAccess.getAttributeAccess().getPropertiesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AttributeProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeProperty__Group__0__Impl
	rule__AttributeProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getNameAssignment_0()); }
(rule__AttributeProperty__NameAssignment_0)
{ after(grammarAccess.getAttributePropertyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeProperty__Group__1__Impl
	rule__AttributeProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getAttributePropertyAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getAlternatives_2()); }
(rule__AttributeProperty__Alternatives_2)
{ after(grammarAccess.getAttributePropertyAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeProperty__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeProperty__Group_2_2__0__Impl
	rule__AttributeProperty__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getValueAssignment_2_2_0()); }
(rule__AttributeProperty__ValueAssignment_2_2_0)
{ after(grammarAccess.getAttributePropertyAccess().getValueAssignment_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeProperty__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeProperty__Group_2_2__1__Impl
	rule__AttributeProperty__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getUsingKeyword_2_2_1()); }

	'using' 

{ after(grammarAccess.getAttributePropertyAccess().getUsingKeyword_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeProperty__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeProperty__Group_2_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getValidValuesAssignment_2_2_2()); }
(rule__AttributeProperty__ValidValuesAssignment_2_2_2)
{ after(grammarAccess.getAttributePropertyAccess().getValidValuesAssignment_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOperationKeyword_0()); }

	'operation' 

{ after(grammarAccess.getOperationAccess().getOperationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTypeAssignment_1()); }
(rule__Operation__TypeAssignment_1)
{ after(grammarAccess.getOperationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameAssignment_2()); }
(rule__Operation__NameAssignment_2)
{ after(grammarAccess.getOperationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLabelAssignment_3()); }
(rule__Operation__LabelAssignment_3)
{ after(grammarAccess.getOperationAccess().getLabelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getPropertiesAssignment_5()); }
(rule__Operation__PropertiesAssignment_5)*
{ after(grammarAccess.getOperationAccess().getPropertiesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__OperationProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationProperty__Group__0__Impl
	rule__OperationProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationPropertyAccess().getNameAssignment_0()); }
(rule__OperationProperty__NameAssignment_0)
{ after(grammarAccess.getOperationPropertyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationProperty__Group__1__Impl
	rule__OperationProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationPropertyAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getOperationPropertyAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationPropertyAccess().getAlternatives_2()); }
(rule__OperationProperty__Alternatives_2)
{ after(grammarAccess.getOperationPropertyAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Validation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validation__Group__0__Impl
	rule__Validation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationAccess().getValidationKeyword_0()); }

	'validation' 

{ after(grammarAccess.getValidationAccess().getValidationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validation__Group__1__Impl
	rule__Validation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationAccess().getRefAssignment_1()); }
(rule__Validation__RefAssignment_1)
{ after(grammarAccess.getValidationAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validation__Group__2__Impl
	rule__Validation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getValidationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validation__Group__3__Impl
	rule__Validation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationAccess().getRulesAssignment_3()); }
(rule__Validation__RulesAssignment_3)*
{ after(grammarAccess.getValidationAccess().getRulesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getValidationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getArrayAction_1()); }
(

)
{ after(grammarAccess.getArrayAccess().getArrayAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__2__Impl
	rule__Array__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesAssignment_2()); }
(rule__Array__ValuesAssignment_2)
{ after(grammarAccess.getArrayAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__3__Impl
	rule__Array__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getGroup_3()); }
(rule__Array__Group_3__0)*
{ after(grammarAccess.getArrayAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Array__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_3__0__Impl
	rule__Array__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getArrayAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesAssignment_3_1()); }
(rule__Array__ValuesAssignment_3_1)
{ after(grammarAccess.getArrayAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValidationRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidationRule__Group__0__Impl
	rule__ValidationRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationRuleAccess().getMessageKeyAssignment_0()); }
(rule__ValidationRule__MessageKeyAssignment_0)
{ after(grammarAccess.getValidationRuleAccess().getMessageKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValidationRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidationRule__Group__1__Impl
	rule__ValidationRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationRuleAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getValidationRuleAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValidationRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidationRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationRuleAccess().getExpressionAssignment_2()); }
(rule__ValidationRule__ExpressionAssignment_2)
{ after(grammarAccess.getValidationRuleAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__DomainObject__UnorderedGroup
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getDomainObjectAccess().getUnorderedGroup());
    }
:
	rule__DomainObject__UnorderedGroup__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getDomainObjectAccess().getUnorderedGroup())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getDomainObjectAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}


rule__DomainObject__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getDomainObjectAccess().getGroup_0()); }
						(rule__DomainObject__Group_0__0)
						{ after(grammarAccess.getDomainObjectAccess().getGroup_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getDomainObjectAccess().getPropertiesAssignment_1()); }
						(rule__DomainObject__PropertiesAssignment_1)
						{ after(grammarAccess.getDomainObjectAccess().getPropertiesAssignment_1()); }
					)
					(
						{ before(grammarAccess.getDomainObjectAccess().getPropertiesAssignment_1()); }
						((rule__DomainObject__PropertiesAssignment_1)=>rule__DomainObject__PropertiesAssignment_1)*
						{ after(grammarAccess.getDomainObjectAccess().getPropertiesAssignment_1()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getDomainObjectAccess().getAttributesAssignment_2()); }
						(rule__DomainObject__AttributesAssignment_2)
						{ after(grammarAccess.getDomainObjectAccess().getAttributesAssignment_2()); }
					)
					(
						{ before(grammarAccess.getDomainObjectAccess().getAttributesAssignment_2()); }
						((rule__DomainObject__AttributesAssignment_2)=>rule__DomainObject__AttributesAssignment_2)*
						{ after(grammarAccess.getDomainObjectAccess().getAttributesAssignment_2()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getDomainObjectAccess().getOperationsAssignment_3()); }
						(rule__DomainObject__OperationsAssignment_3)
						{ after(grammarAccess.getDomainObjectAccess().getOperationsAssignment_3()); }
					)
					(
						{ before(grammarAccess.getDomainObjectAccess().getOperationsAssignment_3()); }
						((rule__DomainObject__OperationsAssignment_3)=>rule__DomainObject__OperationsAssignment_3)*
						{ after(grammarAccess.getDomainObjectAccess().getOperationsAssignment_3()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDomainObjectAccess().getUnorderedGroup(), 4);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getDomainObjectAccess().getGroup_4()); }
						(rule__DomainObject__Group_4__0)
						{ after(grammarAccess.getDomainObjectAccess().getGroup_4()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDomainObjectAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}


rule__DomainObject__UnorderedGroup__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__UnorderedGroup__Impl
	rule__DomainObject__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__UnorderedGroup__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__UnorderedGroup__Impl
	rule__DomainObject__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__UnorderedGroup__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__UnorderedGroup__Impl
	rule__DomainObject__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__UnorderedGroup__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__UnorderedGroup__Impl
	rule__DomainObject__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__UnorderedGroup__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainObject__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}












rule__DomainObject__PackageAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getPackagePackageDeclarationParserRuleCall_0_0_0()); }
	rulePackageDeclaration{ after(grammarAccess.getDomainObjectAccess().getPackagePackageDeclarationParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__ImportsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getImportsImportParserRuleCall_0_1_0()); }
	ruleImport{ after(grammarAccess.getDomainObjectAccess().getImportsImportParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__NameAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getNameValidIDParserRuleCall_0_3_0()); }
	ruleValidID{ after(grammarAccess.getDomainObjectAccess().getNameValidIDParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__LabelAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getLabelSTRINGTerminalRuleCall_0_4_0()); }
	RULE_STRING{ after(grammarAccess.getDomainObjectAccess().getLabelSTRINGTerminalRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__PropertiesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getPropertiesObjectPropertyParserRuleCall_1_0()); }
	ruleObjectProperty{ after(grammarAccess.getDomainObjectAccess().getPropertiesObjectPropertyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getAttributesAttributeParserRuleCall_2_0()); }
	ruleAttribute{ after(grammarAccess.getDomainObjectAccess().getAttributesAttributeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__OperationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getOperationsOperationParserRuleCall_3_0()); }
	ruleOperation{ after(grammarAccess.getDomainObjectAccess().getOperationsOperationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__ValidationsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainObjectAccess().getValidationsValidationParserRuleCall_4_0_0()); }
	ruleValidation{ after(grammarAccess.getDomainObjectAccess().getValidationsValidationParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectPropertyAccess().getNameObjectPropertyNameEnumRuleCall_0_0()); }
	ruleObjectPropertyName{ after(grammarAccess.getObjectPropertyAccess().getNameObjectPropertyNameEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectPropertyAccess().getValueValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getObjectPropertyAccess().getValueValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeValidIDParserRuleCall_0_0()); }
	ruleValidID{ after(grammarAccess.getAttributeAccess().getTypeValidIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getRefValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getAttributeAccess().getRefValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__PropertiesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getPropertiesAttributePropertyParserRuleCall_4_0()); }
	ruleAttributeProperty{ after(grammarAccess.getAttributeAccess().getPropertiesAttributePropertyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getNameAttributePropertyNameEnumRuleCall_0_0()); }
	ruleAttributePropertyName{ after(grammarAccess.getAttributePropertyAccess().getNameAttributePropertyNameEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__ValidValuesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getValidValuesArrayParserRuleCall_2_0_0()); }
	ruleArray{ after(grammarAccess.getAttributePropertyAccess().getValidValuesArrayParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getValueValueParserRuleCall_2_1_0()); }
	ruleValue{ after(grammarAccess.getAttributePropertyAccess().getValueValueParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__ValueAssignment_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getValueValueParserRuleCall_2_2_0_0()); }
	ruleValue{ after(grammarAccess.getAttributePropertyAccess().getValueValueParserRuleCall_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeProperty__ValidValuesAssignment_2_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePropertyAccess().getValidValuesArrayParserRuleCall_2_2_2_0()); }
	ruleArray{ after(grammarAccess.getAttributePropertyAccess().getValidValuesArrayParserRuleCall_2_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTypeOperationTypeEnumRuleCall_1_0()); }
	ruleOperationType{ after(grammarAccess.getOperationAccess().getTypeOperationTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameValidIDParserRuleCall_2_0()); }
	ruleValidID{ after(grammarAccess.getOperationAccess().getNameValidIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__LabelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLabelSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getOperationAccess().getLabelSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__PropertiesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getPropertiesOperationPropertyParserRuleCall_5_0()); }
	ruleOperationProperty{ after(grammarAccess.getOperationAccess().getPropertiesOperationPropertyParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationProperty__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationPropertyAccess().getNameOperationPropertyNameEnumRuleCall_0_0()); }
	ruleOperationPropertyName{ after(grammarAccess.getOperationPropertyAccess().getNameOperationPropertyNameEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationProperty__ValidValuesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationPropertyAccess().getValidValuesArrayParserRuleCall_2_0_0()); }
	ruleArray{ after(grammarAccess.getOperationPropertyAccess().getValidValuesArrayParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationProperty__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationPropertyAccess().getValueValueParserRuleCall_2_1_0()); }
	ruleValue{ after(grammarAccess.getOperationPropertyAccess().getValueValueParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationAccess().getRefIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getValidationAccess().getRefIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__RulesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationAccess().getRulesValidationRuleParserRuleCall_3_0()); }
	ruleValidationRule{ after(grammarAccess.getValidationAccess().getRulesValidationRuleParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getArrayAccess().getValuesSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getArrayAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationRule__MessageKeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationRuleAccess().getMessageKeySTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getValidationRuleAccess().getMessageKeySTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationRule__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationRuleAccess().getExpressionEXPRESSIONTerminalRuleCall_2_0()); }
	RULE_EXPRESSION{ after(grammarAccess.getValidationRuleAccess().getExpressionEXPRESSIONTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_EXPRESSION : '${' ('a'..'z'|'A'..'Z'|'$'|'_'|'*'|'+'|'-'|'='|'/'|'0'..'9'|' '|'?'|':'|'('|')'|'<'|'>'|'.')* '}';

RULE_PATH : RULE_ID ('/' RULE_ID)+ '.' RULE_ID;

RULE_NUMBER : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_INT : '$$$don\'t use this anymore$$$';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


