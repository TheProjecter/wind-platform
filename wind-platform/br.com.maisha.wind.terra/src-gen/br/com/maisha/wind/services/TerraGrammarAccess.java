/*
* generated by Xtext
*/

package br.com.maisha.wind.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class TerraGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DomainObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DomainObject");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Assignment cPackageAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cPackagePackageDeclarationParserRuleCall_0_0_0 = (RuleCall)cPackageAssignment_0_0.eContents().get(0);
		private final Assignment cImportsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cImportsImportParserRuleCall_0_1_0 = (RuleCall)cImportsAssignment_0_1.eContents().get(0);
		private final Keyword cDomain_objectKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cNameAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_0_3_0 = (RuleCall)cNameAssignment_0_3.eContents().get(0);
		private final Assignment cLabelAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cLabelSTRINGTerminalRuleCall_0_4_0 = (RuleCall)cLabelAssignment_0_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Assignment cPropertiesAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final RuleCall cPropertiesObjectPropertyParserRuleCall_1_0 = (RuleCall)cPropertiesAssignment_1.eContents().get(0);
		private final Assignment cAttributesAssignment_2 = (Assignment)cUnorderedGroup.eContents().get(2);
		private final RuleCall cAttributesAttributeParserRuleCall_2_0 = (RuleCall)cAttributesAssignment_2.eContents().get(0);
		private final Assignment cOperationsAssignment_3 = (Assignment)cUnorderedGroup.eContents().get(3);
		private final RuleCall cOperationsOperationParserRuleCall_3_0 = (RuleCall)cOperationsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Assignment cValidationsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cValidationsValidationParserRuleCall_4_0_0 = (RuleCall)cValidationsAssignment_4_0.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		
		//DomainObject:
		//	package=PackageDeclaration imports+=Import* "domain_object" name=ValidID label=STRING "{" &
		//	properties+=ObjectProperty* & attributes+=Attribute* & operations+=Operation* & validations+=Validation* "}";
		public ParserRule getRule() { return rule; }

		//package=PackageDeclaration imports+=Import* "domain_object" name=ValidID label=STRING "{" & properties+=ObjectProperty*
		//& attributes+=Attribute* & operations+=Operation* & validations+=Validation* "}"
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }

		//package=PackageDeclaration imports+=Import* "domain_object" name=ValidID label=STRING "{"
		public Group getGroup_0() { return cGroup_0; }

		//package=PackageDeclaration
		public Assignment getPackageAssignment_0_0() { return cPackageAssignment_0_0; }

		//PackageDeclaration
		public RuleCall getPackagePackageDeclarationParserRuleCall_0_0_0() { return cPackagePackageDeclarationParserRuleCall_0_0_0; }

		//imports+=Import*
		public Assignment getImportsAssignment_0_1() { return cImportsAssignment_0_1; }

		//Import
		public RuleCall getImportsImportParserRuleCall_0_1_0() { return cImportsImportParserRuleCall_0_1_0; }

		//"domain_object"
		public Keyword getDomain_objectKeyword_0_2() { return cDomain_objectKeyword_0_2; }

		//name=ValidID
		public Assignment getNameAssignment_0_3() { return cNameAssignment_0_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_3_0() { return cNameValidIDParserRuleCall_0_3_0; }

		//label=STRING
		public Assignment getLabelAssignment_0_4() { return cLabelAssignment_0_4; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_0_4_0() { return cLabelSTRINGTerminalRuleCall_0_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_5() { return cLeftCurlyBracketKeyword_0_5; }

		//properties+=ObjectProperty*
		public Assignment getPropertiesAssignment_1() { return cPropertiesAssignment_1; }

		//ObjectProperty
		public RuleCall getPropertiesObjectPropertyParserRuleCall_1_0() { return cPropertiesObjectPropertyParserRuleCall_1_0; }

		//attributes+=Attribute*
		public Assignment getAttributesAssignment_2() { return cAttributesAssignment_2; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_2_0() { return cAttributesAttributeParserRuleCall_2_0; }

		//operations+=Operation*
		public Assignment getOperationsAssignment_3() { return cOperationsAssignment_3; }

		//Operation
		public RuleCall getOperationsOperationParserRuleCall_3_0() { return cOperationsOperationParserRuleCall_3_0; }

		//validations+=Validation* "}"
		public Group getGroup_4() { return cGroup_4; }

		//validations+=Validation*
		public Assignment getValidationsAssignment_4_0() { return cValidationsAssignment_4_0; }

		//Validation
		public RuleCall getValidationsValidationParserRuleCall_4_0_0() { return cValidationsValidationParserRuleCall_4_0_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_1() { return cRightCurlyBracketKeyword_4_1; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		
		//Import:
		//	"import" importedNamespace=QualifiedName;
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=QualifiedName
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=QualifiedName
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//QualifiedName
		public RuleCall getImportedNamespaceQualifiedNameParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameParserRuleCall_1_0; }
	}

	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//PackageDeclaration:
		//	"package" name=QualifiedName ";";
		public ParserRule getRule() { return rule; }

		//"package" name=QualifiedName ";"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class ObjectPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameObjectPropertyNameEnumRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//ObjectProperty:
		//	name=ObjectPropertyName ":" value=Value;
		public ParserRule getRule() { return rule; }

		//name=ObjectPropertyName ":" value=Value
		public Group getGroup() { return cGroup; }

		//name=ObjectPropertyName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ObjectPropertyName
		public RuleCall getNameObjectPropertyNameEnumRuleCall_0_0() { return cNameObjectPropertyNameEnumRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeValidIDParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRefValidIDParserRuleCall_1_0 = (RuleCall)cRefAssignment_1.eContents().get(0);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLabelSTRINGTerminalRuleCall_2_0 = (RuleCall)cLabelAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPropertiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPropertiesAttributePropertyParserRuleCall_4_0 = (RuleCall)cPropertiesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Attribute:
		//	type=ValidID ref=ValidID label=STRING "{" properties+=AttributeProperty* "}";
		public ParserRule getRule() { return rule; }

		//type=ValidID ref=ValidID label=STRING "{" properties+=AttributeProperty* "}"
		public Group getGroup() { return cGroup; }

		//type=ValidID
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//ValidID
		public RuleCall getTypeValidIDParserRuleCall_0_0() { return cTypeValidIDParserRuleCall_0_0; }

		//ref=ValidID
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//ValidID
		public RuleCall getRefValidIDParserRuleCall_1_0() { return cRefValidIDParserRuleCall_1_0; }

		//label=STRING
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_2_0() { return cLabelSTRINGTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//properties+=AttributeProperty*
		public Assignment getPropertiesAssignment_4() { return cPropertiesAssignment_4; }

		//AttributeProperty
		public RuleCall getPropertiesAttributePropertyParserRuleCall_4_0() { return cPropertiesAttributePropertyParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class AttributePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameAttributePropertyNameEnumRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cValidValuesAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cValidValuesArrayParserRuleCall_2_0_0 = (RuleCall)cValidValuesAssignment_2_0.eContents().get(0);
		private final Assignment cValueAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_2_1_0 = (RuleCall)cValueAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Assignment cValueAssignment_2_2_0 = (Assignment)cGroup_2_2.eContents().get(0);
		private final RuleCall cValueValueParserRuleCall_2_2_0_0 = (RuleCall)cValueAssignment_2_2_0.eContents().get(0);
		private final Keyword cUsingKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Assignment cValidValuesAssignment_2_2_2 = (Assignment)cGroup_2_2.eContents().get(2);
		private final RuleCall cValidValuesArrayParserRuleCall_2_2_2_0 = (RuleCall)cValidValuesAssignment_2_2_2.eContents().get(0);
		
		//AttributeProperty:
		//	name=AttributePropertyName ":" (validValues=Array | value=Value | value=Value "using" validValues=Array);
		public ParserRule getRule() { return rule; }

		//name=AttributePropertyName ":" (validValues=Array | value=Value | value=Value "using" validValues=Array)
		public Group getGroup() { return cGroup; }

		//name=AttributePropertyName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//AttributePropertyName
		public RuleCall getNameAttributePropertyNameEnumRuleCall_0_0() { return cNameAttributePropertyNameEnumRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//validValues=Array | value=Value | value=Value "using" validValues=Array
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//validValues=Array
		public Assignment getValidValuesAssignment_2_0() { return cValidValuesAssignment_2_0; }

		//Array
		public RuleCall getValidValuesArrayParserRuleCall_2_0_0() { return cValidValuesArrayParserRuleCall_2_0_0; }

		//value=Value
		public Assignment getValueAssignment_2_1() { return cValueAssignment_2_1; }

		//Value
		public RuleCall getValueValueParserRuleCall_2_1_0() { return cValueValueParserRuleCall_2_1_0; }

		//value=Value "using" validValues=Array
		public Group getGroup_2_2() { return cGroup_2_2; }

		//value=Value
		public Assignment getValueAssignment_2_2_0() { return cValueAssignment_2_2_0; }

		//Value
		public RuleCall getValueValueParserRuleCall_2_2_0_0() { return cValueValueParserRuleCall_2_2_0_0; }

		//"using"
		public Keyword getUsingKeyword_2_2_1() { return cUsingKeyword_2_2_1; }

		//validValues=Array
		public Assignment getValidValuesAssignment_2_2_2() { return cValidValuesAssignment_2_2_2; }

		//Array
		public RuleCall getValidValuesArrayParserRuleCall_2_2_2_0() { return cValidValuesArrayParserRuleCall_2_2_2_0; }
	}

	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOperationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeOperationTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cLabelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLabelSTRINGTerminalRuleCall_3_0 = (RuleCall)cLabelAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPropertiesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPropertiesOperationPropertyParserRuleCall_5_0 = (RuleCall)cPropertiesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Operation:
		//	"operation" type=OperationType name=ValidID label=STRING "{" properties+=OperationProperty* "}";
		public ParserRule getRule() { return rule; }

		//"operation" type=OperationType name=ValidID label=STRING "{" properties+=OperationProperty* "}"
		public Group getGroup() { return cGroup; }

		//"operation"
		public Keyword getOperationKeyword_0() { return cOperationKeyword_0; }

		//type=OperationType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//OperationType
		public RuleCall getTypeOperationTypeEnumRuleCall_1_0() { return cTypeOperationTypeEnumRuleCall_1_0; }

		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }

		//label=STRING
		public Assignment getLabelAssignment_3() { return cLabelAssignment_3; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_3_0() { return cLabelSTRINGTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//properties+=OperationProperty*
		public Assignment getPropertiesAssignment_5() { return cPropertiesAssignment_5; }

		//OperationProperty
		public RuleCall getPropertiesOperationPropertyParserRuleCall_5_0() { return cPropertiesOperationPropertyParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class OperationPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OperationProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameOperationPropertyNameEnumRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cValidValuesAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cValidValuesArrayParserRuleCall_2_0_0 = (RuleCall)cValidValuesAssignment_2_0.eContents().get(0);
		private final Assignment cValueAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_2_1_0 = (RuleCall)cValueAssignment_2_1.eContents().get(0);
		
		//OperationProperty:
		//	name=OperationPropertyName ":" (validValues=Array | value=Value);
		public ParserRule getRule() { return rule; }

		//name=OperationPropertyName ":" (validValues=Array | value=Value)
		public Group getGroup() { return cGroup; }

		//name=OperationPropertyName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//OperationPropertyName
		public RuleCall getNameOperationPropertyNameEnumRuleCall_0_0() { return cNameOperationPropertyNameEnumRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//validValues=Array | value=Value
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//validValues=Array
		public Assignment getValidValuesAssignment_2_0() { return cValidValuesAssignment_2_0; }

		//Array
		public RuleCall getValidValuesArrayParserRuleCall_2_0_0() { return cValidValuesArrayParserRuleCall_2_0_0; }

		//value=Value
		public Assignment getValueAssignment_2_1() { return cValueAssignment_2_1; }

		//Value
		public RuleCall getValueValueParserRuleCall_2_1_0() { return cValueValueParserRuleCall_2_1_0; }
	}

	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cValidIDParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEXPRESSIONTerminalRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cNUMBERTerminalRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPATHTerminalRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//Value:
		//	"true" | "false" | STRING | ValidID | EXPRESSION | NUMBER | PATH;
		public ParserRule getRule() { return rule; }

		//"true" | "false" | STRING | ValidID | EXPRESSION | NUMBER | PATH
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }

		//ValidID
		public RuleCall getValidIDParserRuleCall_3() { return cValidIDParserRuleCall_3; }

		//EXPRESSION
		public RuleCall getEXPRESSIONTerminalRuleCall_4() { return cEXPRESSIONTerminalRuleCall_4; }

		//NUMBER
		public RuleCall getNUMBERTerminalRuleCall_5() { return cNUMBERTerminalRuleCall_5; }

		//PATH
		public RuleCall getPATHTerminalRuleCall_6() { return cPATHTerminalRuleCall_6; }
	}

	public class ValidationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Validation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValidationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRefIDTerminalRuleCall_1_0 = (RuleCall)cRefAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRulesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRulesValidationRuleParserRuleCall_3_0 = (RuleCall)cRulesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Validation:
		//	"validation" ref=ID "{" rules+=ValidationRule* "}";
		public ParserRule getRule() { return rule; }

		//"validation" ref=ID "{" rules+=ValidationRule* "}"
		public Group getGroup() { return cGroup; }

		//"validation"
		public Keyword getValidationKeyword_0() { return cValidationKeyword_0; }

		//ref=ID
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//ID
		public RuleCall getRefIDTerminalRuleCall_1_0() { return cRefIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//rules+=ValidationRule*
		public Assignment getRulesAssignment_3() { return cRulesAssignment_3; }

		//ValidationRule
		public RuleCall getRulesValidationRuleParserRuleCall_3_0() { return cRulesValidationRuleParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Array");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cArrayAction_1 = (Action)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesSTRINGTerminalRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Array:
		//	"[" {Array} values+=STRING ("," values+=STRING)* "]";
		public ParserRule getRule() { return rule; }

		//"[" {Array} values+=STRING ("," values+=STRING)* "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//{Array}
		public Action getArrayAction_1() { return cArrayAction_1; }

		//values+=STRING
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_2_0() { return cValuesSTRINGTerminalRuleCall_2_0; }

		//("," values+=STRING)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=STRING
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_3_1_0() { return cValuesSTRINGTerminalRuleCall_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class ValidationRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValidationRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessageKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMessageKeySTRINGTerminalRuleCall_0_0 = (RuleCall)cMessageKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExpressionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExpressionEXPRESSIONTerminalRuleCall_2_0 = (RuleCall)cExpressionAssignment_2.eContents().get(0);
		
		//ValidationRule:
		//	messageKey=STRING ":" expression=EXPRESSION;
		public ParserRule getRule() { return rule; }

		//messageKey=STRING ":" expression=EXPRESSION
		public Group getGroup() { return cGroup; }

		//messageKey=STRING
		public Assignment getMessageKeyAssignment_0() { return cMessageKeyAssignment_0; }

		//STRING
		public RuleCall getMessageKeySTRINGTerminalRuleCall_0_0() { return cMessageKeySTRINGTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//expression=EXPRESSION
		public Assignment getExpressionAssignment_2() { return cExpressionAssignment_2; }

		//EXPRESSION
		public RuleCall getExpressionEXPRESSIONTerminalRuleCall_2_0() { return cExpressionEXPRESSIONTerminalRuleCall_2_0; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValidIDParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cValidIDParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ValidID ("." ValidID)*;
		public ParserRule getRule() { return rule; }

		//ValidID ("." ValidID)*
		public Group getGroup() { return cGroup; }

		//ValidID
		public RuleCall getValidIDParserRuleCall_0() { return cValidIDParserRuleCall_0; }

		//("." ValidID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ValidID
		public RuleCall getValidIDParserRuleCall_1_1() { return cValidIDParserRuleCall_1_1; }
	}

	public class ValidIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValidID");
		private final RuleCall cIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ValidID:
		//	ID;
		public ParserRule getRule() { return rule; }

		//ID
		public RuleCall getIDTerminalRuleCall() { return cIDTerminalRuleCall; }
	}
	
	
	public class OperationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "OperationType");
		private final EnumLiteralDeclaration cGroovyEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cGroovyGroovyKeyword_0 = (Keyword)cGroovyEnumLiteralDeclaration.eContents().get(0);
		
		//enum OperationType:
		//	groovy;
		public EnumRule getRule() { return rule; }

		//groovy
		public EnumLiteralDeclaration getGroovyEnumLiteralDeclaration() { return cGroovyEnumLiteralDeclaration; }

		//"groovy"
		public Keyword getGroovyGroovyKeyword_0() { return cGroovyGroovyKeyword_0; }
	}

	public class PresentationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "PresentationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTextEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTextTextKeyword_0_0 = (Keyword)cTextEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRadioEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRadioRadioKeyword_1_0 = (Keyword)cRadioEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCheckboxEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCheckboxCheckboxKeyword_2_0 = (Keyword)cCheckboxEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cComboEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cComboComboKeyword_3_0 = (Keyword)cComboEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cListEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cListListKeyword_4_0 = (Keyword)cListEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cTextareaEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cTextareaTextareaKeyword_5_0 = (Keyword)cTextareaEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cDateEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cDateDateKeyword_6_0 = (Keyword)cDateEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cRelatedEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cRelatedRelatedKeyword_7_0 = (Keyword)cRelatedEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cEmbedded_objectEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cEmbedded_objectEmbedded_objectKeyword_8_0 = (Keyword)cEmbedded_objectEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cGroupEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cGroupGroupKeyword_9_0 = (Keyword)cGroupEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cFolderEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cFolderFolderKeyword_10_0 = (Keyword)cFolderEnumLiteralDeclaration_10.eContents().get(0);
		
		//enum PresentationType:
		//	text | radio | checkbox | combo | list | textarea | date | related | embedded_object | group | folder;
		public EnumRule getRule() { return rule; }

		//text | radio | checkbox | combo | list | textarea | date | related | embedded_object | group | folder
		public Alternatives getAlternatives() { return cAlternatives; }

		//text
		public EnumLiteralDeclaration getTextEnumLiteralDeclaration_0() { return cTextEnumLiteralDeclaration_0; }

		//"text"
		public Keyword getTextTextKeyword_0_0() { return cTextTextKeyword_0_0; }

		//radio
		public EnumLiteralDeclaration getRadioEnumLiteralDeclaration_1() { return cRadioEnumLiteralDeclaration_1; }

		//"radio"
		public Keyword getRadioRadioKeyword_1_0() { return cRadioRadioKeyword_1_0; }

		//checkbox
		public EnumLiteralDeclaration getCheckboxEnumLiteralDeclaration_2() { return cCheckboxEnumLiteralDeclaration_2; }

		//"checkbox"
		public Keyword getCheckboxCheckboxKeyword_2_0() { return cCheckboxCheckboxKeyword_2_0; }

		//combo
		public EnumLiteralDeclaration getComboEnumLiteralDeclaration_3() { return cComboEnumLiteralDeclaration_3; }

		//"combo"
		public Keyword getComboComboKeyword_3_0() { return cComboComboKeyword_3_0; }

		//list
		public EnumLiteralDeclaration getListEnumLiteralDeclaration_4() { return cListEnumLiteralDeclaration_4; }

		//"list"
		public Keyword getListListKeyword_4_0() { return cListListKeyword_4_0; }

		//textarea
		public EnumLiteralDeclaration getTextareaEnumLiteralDeclaration_5() { return cTextareaEnumLiteralDeclaration_5; }

		//"textarea"
		public Keyword getTextareaTextareaKeyword_5_0() { return cTextareaTextareaKeyword_5_0; }

		//date
		public EnumLiteralDeclaration getDateEnumLiteralDeclaration_6() { return cDateEnumLiteralDeclaration_6; }

		//"date"
		public Keyword getDateDateKeyword_6_0() { return cDateDateKeyword_6_0; }

		//related
		public EnumLiteralDeclaration getRelatedEnumLiteralDeclaration_7() { return cRelatedEnumLiteralDeclaration_7; }

		//"related"
		public Keyword getRelatedRelatedKeyword_7_0() { return cRelatedRelatedKeyword_7_0; }

		//embedded_object
		public EnumLiteralDeclaration getEmbedded_objectEnumLiteralDeclaration_8() { return cEmbedded_objectEnumLiteralDeclaration_8; }

		//"embedded_object"
		public Keyword getEmbedded_objectEmbedded_objectKeyword_8_0() { return cEmbedded_objectEmbedded_objectKeyword_8_0; }

		//group
		public EnumLiteralDeclaration getGroupEnumLiteralDeclaration_9() { return cGroupEnumLiteralDeclaration_9; }

		//"group"
		public Keyword getGroupGroupKeyword_9_0() { return cGroupGroupKeyword_9_0; }

		//folder
		public EnumLiteralDeclaration getFolderEnumLiteralDeclaration_10() { return cFolderEnumLiteralDeclaration_10; }

		//"folder"
		public Keyword getFolderFolderKeyword_10_0() { return cFolderFolderKeyword_10_0; }
	}

	public class AttributePropertyNameElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "AttributePropertyName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cXEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cXXKeyword_0_0 = (Keyword)cXEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cYYKeyword_1_0 = (Keyword)cYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cColspanEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cColspanColspanKeyword_2_0 = (Keyword)cColspanEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cRowspanEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cRowspanRowspanKeyword_3_0 = (Keyword)cRowspanEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDisabledEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDisabledDisabledKeyword_4_0 = (Keyword)cDisabledEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cIconEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cIconIconKeyword_5_0 = (Keyword)cIconEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cWidthEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cWidthWidthKeyword_6_0 = (Keyword)cWidthEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cHeightEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cHeightHeightKeyword_7_0 = (Keyword)cHeightEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cTooltipEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cTooltipTooltipKeyword_8_0 = (Keyword)cTooltipEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cGroupEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cGroupGroupKeyword_9_0 = (Keyword)cGroupEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cVisibleInEditionEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cVisibleInEditionVisibleInEditionKeyword_10_0 = (Keyword)cVisibleInEditionEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cVisibleInGridEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cVisibleInGridVisibleInGridKeyword_11_0 = (Keyword)cVisibleInGridEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cContentEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cContentContentKeyword_12_0 = (Keyword)cContentEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cValueEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cValueValueKeyword_13_0 = (Keyword)cValueEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cValidValuesEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cValidValuesValidValuesKeyword_14_0 = (Keyword)cValidValuesEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cValidationEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cValidationValidationKeyword_15_0 = (Keyword)cValidationEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cRequiredEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cRequiredRequiredKeyword_16_0 = (Keyword)cRequiredEnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cMax_lengthEnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cMax_lengthMax_lengthKeyword_17_0 = (Keyword)cMax_lengthEnumLiteralDeclaration_17.eContents().get(0);
		private final EnumLiteralDeclaration cMin_lengthEnumLiteralDeclaration_18 = (EnumLiteralDeclaration)cAlternatives.eContents().get(18);
		private final Keyword cMin_lengthMin_lengthKeyword_18_0 = (Keyword)cMin_lengthEnumLiteralDeclaration_18.eContents().get(0);
		private final EnumLiteralDeclaration cRangeEnumLiteralDeclaration_19 = (EnumLiteralDeclaration)cAlternatives.eContents().get(19);
		private final Keyword cRangeRangeKeyword_19_0 = (Keyword)cRangeEnumLiteralDeclaration_19.eContents().get(0);
		private final EnumLiteralDeclaration cMaskEnumLiteralDeclaration_20 = (EnumLiteralDeclaration)cAlternatives.eContents().get(20);
		private final Keyword cMaskMaskKeyword_20_0 = (Keyword)cMaskEnumLiteralDeclaration_20.eContents().get(0);
		private final EnumLiteralDeclaration cEventEnumLiteralDeclaration_21 = (EnumLiteralDeclaration)cAlternatives.eContents().get(21);
		private final Keyword cEventEventKeyword_21_0 = (Keyword)cEventEnumLiteralDeclaration_21.eContents().get(0);
		private final EnumLiteralDeclaration cToStringEnumLiteralDeclaration_22 = (EnumLiteralDeclaration)cAlternatives.eContents().get(22);
		private final Keyword cToStringToStringKeyword_22_0 = (Keyword)cToStringEnumLiteralDeclaration_22.eContents().get(0);
		private final EnumLiteralDeclaration cOnetomanyEnumLiteralDeclaration_23 = (EnumLiteralDeclaration)cAlternatives.eContents().get(23);
		private final Keyword cOnetomanyOnetomanyKeyword_23_0 = (Keyword)cOnetomanyEnumLiteralDeclaration_23.eContents().get(0);
		private final EnumLiteralDeclaration cManytooneEnumLiteralDeclaration_24 = (EnumLiteralDeclaration)cAlternatives.eContents().get(24);
		private final Keyword cManytooneManytooneKeyword_24_0 = (Keyword)cManytooneEnumLiteralDeclaration_24.eContents().get(0);
		private final EnumLiteralDeclaration cTransientEnumLiteralDeclaration_25 = (EnumLiteralDeclaration)cAlternatives.eContents().get(25);
		private final Keyword cTransientTransientKeyword_25_0 = (Keyword)cTransientEnumLiteralDeclaration_25.eContents().get(0);
		private final EnumLiteralDeclaration cFolderEnumLiteralDeclaration_26 = (EnumLiteralDeclaration)cAlternatives.eContents().get(26);
		private final Keyword cFolderFolderKeyword_26_0 = (Keyword)cFolderEnumLiteralDeclaration_26.eContents().get(0);
		private final EnumLiteralDeclaration cPresentation_typeEnumLiteralDeclaration_27 = (EnumLiteralDeclaration)cAlternatives.eContents().get(27);
		private final Keyword cPresentation_typePresentation_typeKeyword_27_0 = (Keyword)cPresentation_typeEnumLiteralDeclaration_27.eContents().get(0);
		private final EnumLiteralDeclaration cSequenceEnumLiteralDeclaration_28 = (EnumLiteralDeclaration)cAlternatives.eContents().get(28);
		private final Keyword cSequenceSequenceKeyword_28_0 = (Keyword)cSequenceEnumLiteralDeclaration_28.eContents().get(0);
		
		//enum AttributePropertyName:
		//	x | y | colspan | rowspan | disabled | icon | width | height | tooltip | group | visibleInEdition | visibleInGrid |
		//	content | value | validValues | validation | required | max_length | min_length | range | mask | event | toString |
		//	onetomany | manytoone | transient | folder | presentation_type | sequence;
		public EnumRule getRule() { return rule; }

		//x | y | colspan | rowspan | disabled | icon | width | height | tooltip | group | visibleInEdition | visibleInGrid |
		//content | value | validValues | validation | required | max_length | min_length | range | mask | event | toString |
		//onetomany | manytoone | transient | folder | presentation_type | sequence
		public Alternatives getAlternatives() { return cAlternatives; }

		//x
		public EnumLiteralDeclaration getXEnumLiteralDeclaration_0() { return cXEnumLiteralDeclaration_0; }

		//"x"
		public Keyword getXXKeyword_0_0() { return cXXKeyword_0_0; }

		//y
		public EnumLiteralDeclaration getYEnumLiteralDeclaration_1() { return cYEnumLiteralDeclaration_1; }

		//"y"
		public Keyword getYYKeyword_1_0() { return cYYKeyword_1_0; }

		//colspan
		public EnumLiteralDeclaration getColspanEnumLiteralDeclaration_2() { return cColspanEnumLiteralDeclaration_2; }

		//"colspan"
		public Keyword getColspanColspanKeyword_2_0() { return cColspanColspanKeyword_2_0; }

		//rowspan
		public EnumLiteralDeclaration getRowspanEnumLiteralDeclaration_3() { return cRowspanEnumLiteralDeclaration_3; }

		//"rowspan"
		public Keyword getRowspanRowspanKeyword_3_0() { return cRowspanRowspanKeyword_3_0; }

		//disabled
		public EnumLiteralDeclaration getDisabledEnumLiteralDeclaration_4() { return cDisabledEnumLiteralDeclaration_4; }

		//"disabled"
		public Keyword getDisabledDisabledKeyword_4_0() { return cDisabledDisabledKeyword_4_0; }

		//icon
		public EnumLiteralDeclaration getIconEnumLiteralDeclaration_5() { return cIconEnumLiteralDeclaration_5; }

		//"icon"
		public Keyword getIconIconKeyword_5_0() { return cIconIconKeyword_5_0; }

		//width
		public EnumLiteralDeclaration getWidthEnumLiteralDeclaration_6() { return cWidthEnumLiteralDeclaration_6; }

		//"width"
		public Keyword getWidthWidthKeyword_6_0() { return cWidthWidthKeyword_6_0; }

		//height
		public EnumLiteralDeclaration getHeightEnumLiteralDeclaration_7() { return cHeightEnumLiteralDeclaration_7; }

		//"height"
		public Keyword getHeightHeightKeyword_7_0() { return cHeightHeightKeyword_7_0; }

		//tooltip
		public EnumLiteralDeclaration getTooltipEnumLiteralDeclaration_8() { return cTooltipEnumLiteralDeclaration_8; }

		//"tooltip"
		public Keyword getTooltipTooltipKeyword_8_0() { return cTooltipTooltipKeyword_8_0; }

		//group
		public EnumLiteralDeclaration getGroupEnumLiteralDeclaration_9() { return cGroupEnumLiteralDeclaration_9; }

		//"group"
		public Keyword getGroupGroupKeyword_9_0() { return cGroupGroupKeyword_9_0; }

		//visibleInEdition
		public EnumLiteralDeclaration getVisibleInEditionEnumLiteralDeclaration_10() { return cVisibleInEditionEnumLiteralDeclaration_10; }

		//"visibleInEdition"
		public Keyword getVisibleInEditionVisibleInEditionKeyword_10_0() { return cVisibleInEditionVisibleInEditionKeyword_10_0; }

		//visibleInGrid
		public EnumLiteralDeclaration getVisibleInGridEnumLiteralDeclaration_11() { return cVisibleInGridEnumLiteralDeclaration_11; }

		//"visibleInGrid"
		public Keyword getVisibleInGridVisibleInGridKeyword_11_0() { return cVisibleInGridVisibleInGridKeyword_11_0; }

		//content
		public EnumLiteralDeclaration getContentEnumLiteralDeclaration_12() { return cContentEnumLiteralDeclaration_12; }

		//"content"
		public Keyword getContentContentKeyword_12_0() { return cContentContentKeyword_12_0; }

		//value
		public EnumLiteralDeclaration getValueEnumLiteralDeclaration_13() { return cValueEnumLiteralDeclaration_13; }

		//"value"
		public Keyword getValueValueKeyword_13_0() { return cValueValueKeyword_13_0; }

		//validValues
		public EnumLiteralDeclaration getValidValuesEnumLiteralDeclaration_14() { return cValidValuesEnumLiteralDeclaration_14; }

		//"validValues"
		public Keyword getValidValuesValidValuesKeyword_14_0() { return cValidValuesValidValuesKeyword_14_0; }

		//validation
		public EnumLiteralDeclaration getValidationEnumLiteralDeclaration_15() { return cValidationEnumLiteralDeclaration_15; }

		//"validation"
		public Keyword getValidationValidationKeyword_15_0() { return cValidationValidationKeyword_15_0; }

		//required
		public EnumLiteralDeclaration getRequiredEnumLiteralDeclaration_16() { return cRequiredEnumLiteralDeclaration_16; }

		//"required"
		public Keyword getRequiredRequiredKeyword_16_0() { return cRequiredRequiredKeyword_16_0; }

		//max_length
		public EnumLiteralDeclaration getMax_lengthEnumLiteralDeclaration_17() { return cMax_lengthEnumLiteralDeclaration_17; }

		//"max_length"
		public Keyword getMax_lengthMax_lengthKeyword_17_0() { return cMax_lengthMax_lengthKeyword_17_0; }

		//min_length
		public EnumLiteralDeclaration getMin_lengthEnumLiteralDeclaration_18() { return cMin_lengthEnumLiteralDeclaration_18; }

		//"min_length"
		public Keyword getMin_lengthMin_lengthKeyword_18_0() { return cMin_lengthMin_lengthKeyword_18_0; }

		//range
		public EnumLiteralDeclaration getRangeEnumLiteralDeclaration_19() { return cRangeEnumLiteralDeclaration_19; }

		//"range"
		public Keyword getRangeRangeKeyword_19_0() { return cRangeRangeKeyword_19_0; }

		//mask
		public EnumLiteralDeclaration getMaskEnumLiteralDeclaration_20() { return cMaskEnumLiteralDeclaration_20; }

		//"mask"
		public Keyword getMaskMaskKeyword_20_0() { return cMaskMaskKeyword_20_0; }

		//event
		public EnumLiteralDeclaration getEventEnumLiteralDeclaration_21() { return cEventEnumLiteralDeclaration_21; }

		//"event"
		public Keyword getEventEventKeyword_21_0() { return cEventEventKeyword_21_0; }

		//toString
		public EnumLiteralDeclaration getToStringEnumLiteralDeclaration_22() { return cToStringEnumLiteralDeclaration_22; }

		//"toString"
		public Keyword getToStringToStringKeyword_22_0() { return cToStringToStringKeyword_22_0; }

		//onetomany
		public EnumLiteralDeclaration getOnetomanyEnumLiteralDeclaration_23() { return cOnetomanyEnumLiteralDeclaration_23; }

		//"onetomany"
		public Keyword getOnetomanyOnetomanyKeyword_23_0() { return cOnetomanyOnetomanyKeyword_23_0; }

		//manytoone
		public EnumLiteralDeclaration getManytooneEnumLiteralDeclaration_24() { return cManytooneEnumLiteralDeclaration_24; }

		//"manytoone"
		public Keyword getManytooneManytooneKeyword_24_0() { return cManytooneManytooneKeyword_24_0; }

		//transient
		public EnumLiteralDeclaration getTransientEnumLiteralDeclaration_25() { return cTransientEnumLiteralDeclaration_25; }

		//"transient"
		public Keyword getTransientTransientKeyword_25_0() { return cTransientTransientKeyword_25_0; }

		//folder
		public EnumLiteralDeclaration getFolderEnumLiteralDeclaration_26() { return cFolderEnumLiteralDeclaration_26; }

		//"folder"
		public Keyword getFolderFolderKeyword_26_0() { return cFolderFolderKeyword_26_0; }

		//presentation_type
		public EnumLiteralDeclaration getPresentation_typeEnumLiteralDeclaration_27() { return cPresentation_typeEnumLiteralDeclaration_27; }

		//"presentation_type"
		public Keyword getPresentation_typePresentation_typeKeyword_27_0() { return cPresentation_typePresentation_typeKeyword_27_0; }

		//sequence
		public EnumLiteralDeclaration getSequenceEnumLiteralDeclaration_28() { return cSequenceEnumLiteralDeclaration_28; }

		//"sequence"
		public Keyword getSequenceSequenceKeyword_28_0() { return cSequenceSequenceKeyword_28_0; }
	}

	public class OperationPropertyNameElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "OperationPropertyName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDisabledEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDisabledDisabledKeyword_0_0 = (Keyword)cDisabledEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIconEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIconIconKeyword_1_0 = (Keyword)cIconEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTooltipEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTooltipTooltipKeyword_2_0 = (Keyword)cTooltipEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cVisibleEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cVisibleVisibleKeyword_3_0 = (Keyword)cVisibleEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cFileEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cFileFileKeyword_4_0 = (Keyword)cFileEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cValidWhenEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cValidWhenValidWhenKeyword_5_0 = (Keyword)cValidWhenEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cIs_filterEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cIs_filterIs_filterKeyword_6_0 = (Keyword)cIs_filterEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cValidateEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cValidateValidateKeyword_7_0 = (Keyword)cValidateEnumLiteralDeclaration_7.eContents().get(0);
		
		//enum OperationPropertyName:
		//	disabled | icon | tooltip | visible | file | validWhen | is_filter | validate;
		public EnumRule getRule() { return rule; }

		//disabled | icon | tooltip | visible | file | validWhen | is_filter | validate
		public Alternatives getAlternatives() { return cAlternatives; }

		//disabled
		public EnumLiteralDeclaration getDisabledEnumLiteralDeclaration_0() { return cDisabledEnumLiteralDeclaration_0; }

		//"disabled"
		public Keyword getDisabledDisabledKeyword_0_0() { return cDisabledDisabledKeyword_0_0; }

		//icon
		public EnumLiteralDeclaration getIconEnumLiteralDeclaration_1() { return cIconEnumLiteralDeclaration_1; }

		//"icon"
		public Keyword getIconIconKeyword_1_0() { return cIconIconKeyword_1_0; }

		//tooltip
		public EnumLiteralDeclaration getTooltipEnumLiteralDeclaration_2() { return cTooltipEnumLiteralDeclaration_2; }

		//"tooltip"
		public Keyword getTooltipTooltipKeyword_2_0() { return cTooltipTooltipKeyword_2_0; }

		//visible
		public EnumLiteralDeclaration getVisibleEnumLiteralDeclaration_3() { return cVisibleEnumLiteralDeclaration_3; }

		//"visible"
		public Keyword getVisibleVisibleKeyword_3_0() { return cVisibleVisibleKeyword_3_0; }

		//file
		public EnumLiteralDeclaration getFileEnumLiteralDeclaration_4() { return cFileEnumLiteralDeclaration_4; }

		//"file"
		public Keyword getFileFileKeyword_4_0() { return cFileFileKeyword_4_0; }

		//validWhen
		public EnumLiteralDeclaration getValidWhenEnumLiteralDeclaration_5() { return cValidWhenEnumLiteralDeclaration_5; }

		//"validWhen"
		public Keyword getValidWhenValidWhenKeyword_5_0() { return cValidWhenValidWhenKeyword_5_0; }

		//is_filter
		public EnumLiteralDeclaration getIs_filterEnumLiteralDeclaration_6() { return cIs_filterEnumLiteralDeclaration_6; }

		//"is_filter"
		public Keyword getIs_filterIs_filterKeyword_6_0() { return cIs_filterIs_filterKeyword_6_0; }

		//validate
		public EnumLiteralDeclaration getValidateEnumLiteralDeclaration_7() { return cValidateEnumLiteralDeclaration_7; }

		//"validate"
		public Keyword getValidateValidateKeyword_7_0() { return cValidateValidateKeyword_7_0; }
	}

	public class ObjectPropertyNameElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectPropertyName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOpen_filteringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOpen_filteringOpen_filteringKeyword_0_0 = (Keyword)cOpen_filteringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEvent_handlerEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEvent_handlerEvent_handlerKeyword_1_0 = (Keyword)cEvent_handlerEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ObjectPropertyName:
		//	open_filtering | event_handler;
		public EnumRule getRule() { return rule; }

		//open_filtering | event_handler
		public Alternatives getAlternatives() { return cAlternatives; }

		//open_filtering
		public EnumLiteralDeclaration getOpen_filteringEnumLiteralDeclaration_0() { return cOpen_filteringEnumLiteralDeclaration_0; }

		//"open_filtering"
		public Keyword getOpen_filteringOpen_filteringKeyword_0_0() { return cOpen_filteringOpen_filteringKeyword_0_0; }

		//event_handler
		public EnumLiteralDeclaration getEvent_handlerEnumLiteralDeclaration_1() { return cEvent_handlerEnumLiteralDeclaration_1; }

		//"event_handler"
		public Keyword getEvent_handlerEvent_handlerKeyword_1_0() { return cEvent_handlerEvent_handlerKeyword_1_0; }
	}
	
	private DomainObjectElements pDomainObject;
	private ImportElements pImport;
	private PackageDeclarationElements pPackageDeclaration;
	private ObjectPropertyElements pObjectProperty;
	private AttributeElements pAttribute;
	private AttributePropertyElements pAttributeProperty;
	private OperationElements pOperation;
	private OperationPropertyElements pOperationProperty;
	private ValueElements pValue;
	private ValidationElements pValidation;
	private ArrayElements pArray;
	private ValidationRuleElements pValidationRule;
	private TerminalRule tEXPRESSION;
	private TerminalRule tPATH;
	private TerminalRule tNUMBER;
	private TerminalRule tINT;
	private QualifiedNameElements pQualifiedName;
	private ValidIDElements pValidID;
	private TerminalRule tID;
	private OperationTypeElements unknownRuleOperationType;
	private PresentationTypeElements unknownRulePresentationType;
	private AttributePropertyNameElements unknownRuleAttributePropertyName;
	private OperationPropertyNameElements unknownRuleOperationPropertyName;
	private ObjectPropertyNameElements unknownRuleObjectPropertyName;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public TerraGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DomainObject:
	//	package=PackageDeclaration imports+=Import* "domain_object" name=ValidID label=STRING "{" &
	//	properties+=ObjectProperty* & attributes+=Attribute* & operations+=Operation* & validations+=Validation* "}";
	public DomainObjectElements getDomainObjectAccess() {
		return (pDomainObject != null) ? pDomainObject : (pDomainObject = new DomainObjectElements());
	}
	
	public ParserRule getDomainObjectRule() {
		return getDomainObjectAccess().getRule();
	}

	//Import:
	//	"import" importedNamespace=QualifiedName;
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//PackageDeclaration:
	//	"package" name=QualifiedName ";";
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return (pPackageDeclaration != null) ? pPackageDeclaration : (pPackageDeclaration = new PackageDeclarationElements());
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}

	//ObjectProperty:
	//	name=ObjectPropertyName ":" value=Value;
	public ObjectPropertyElements getObjectPropertyAccess() {
		return (pObjectProperty != null) ? pObjectProperty : (pObjectProperty = new ObjectPropertyElements());
	}
	
	public ParserRule getObjectPropertyRule() {
		return getObjectPropertyAccess().getRule();
	}

	//Attribute:
	//	type=ValidID ref=ValidID label=STRING "{" properties+=AttributeProperty* "}";
	public AttributeElements getAttributeAccess() {
		return (pAttribute != null) ? pAttribute : (pAttribute = new AttributeElements());
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//AttributeProperty:
	//	name=AttributePropertyName ":" (validValues=Array | value=Value | value=Value "using" validValues=Array);
	public AttributePropertyElements getAttributePropertyAccess() {
		return (pAttributeProperty != null) ? pAttributeProperty : (pAttributeProperty = new AttributePropertyElements());
	}
	
	public ParserRule getAttributePropertyRule() {
		return getAttributePropertyAccess().getRule();
	}

	//Operation:
	//	"operation" type=OperationType name=ValidID label=STRING "{" properties+=OperationProperty* "}";
	public OperationElements getOperationAccess() {
		return (pOperation != null) ? pOperation : (pOperation = new OperationElements());
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}

	//OperationProperty:
	//	name=OperationPropertyName ":" (validValues=Array | value=Value);
	public OperationPropertyElements getOperationPropertyAccess() {
		return (pOperationProperty != null) ? pOperationProperty : (pOperationProperty = new OperationPropertyElements());
	}
	
	public ParserRule getOperationPropertyRule() {
		return getOperationPropertyAccess().getRule();
	}

	//Value:
	//	"true" | "false" | STRING | ValidID | EXPRESSION | NUMBER | PATH;
	public ValueElements getValueAccess() {
		return (pValue != null) ? pValue : (pValue = new ValueElements());
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}

	//Validation:
	//	"validation" ref=ID "{" rules+=ValidationRule* "}";
	public ValidationElements getValidationAccess() {
		return (pValidation != null) ? pValidation : (pValidation = new ValidationElements());
	}
	
	public ParserRule getValidationRule() {
		return getValidationAccess().getRule();
	}

	//Array:
	//	"[" {Array} values+=STRING ("," values+=STRING)* "]";
	public ArrayElements getArrayAccess() {
		return (pArray != null) ? pArray : (pArray = new ArrayElements());
	}
	
	public ParserRule getArrayRule() {
		return getArrayAccess().getRule();
	}

	//ValidationRule:
	//	messageKey=STRING ":" expression=EXPRESSION;
	public ValidationRuleElements getValidationRuleAccess() {
		return (pValidationRule != null) ? pValidationRule : (pValidationRule = new ValidationRuleElements());
	}
	
	public ParserRule getValidationRuleRule() {
		return getValidationRuleAccess().getRule();
	}

	//terminal EXPRESSION:
	//	"${" ("a".."z" | "A".."Z" | "$" | "_" | "*" | "+" | "-" | "=" | "/" | "0".."9" | " " | "?" | ":" | "(" | ")" | "<" |
	//	">" | ".")* "}";
	public TerminalRule getEXPRESSIONRule() {
		return (tEXPRESSION != null) ? tEXPRESSION : (tEXPRESSION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "EXPRESSION"));
	} 

	//terminal PATH:
	//	ID ("/" ID)+ "." ID;
	public TerminalRule getPATHRule() {
		return (tPATH != null) ? tPATH : (tPATH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "PATH"));
	} 

	//terminal NUMBER returns ecore::EBigDecimal:
	//	"0".."9"* ("." "0".."9"+)?;
	public TerminalRule getNUMBERRule() {
		return (tNUMBER != null) ? tNUMBER : (tNUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NUMBER"));
	} 

	//terminal INT returns ecore::EInt:
	//	"$$$don\'t use this anymore$$$";
	public TerminalRule getINTRule() {
		return (tINT != null) ? tINT : (tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT"));
	} 

	//QualifiedName:
	//	ValidID ("." ValidID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//ValidID:
	//	ID;
	public ValidIDElements getValidIDAccess() {
		return (pValidID != null) ? pValidID : (pValidID = new ValidIDElements());
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "$" | "_") ("a".."z" | "A".."Z" | "$" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	//enum OperationType:
	//	groovy;
	public OperationTypeElements getOperationTypeAccess() {
		return (unknownRuleOperationType != null) ? unknownRuleOperationType : (unknownRuleOperationType = new OperationTypeElements());
	}
	
	public EnumRule getOperationTypeRule() {
		return getOperationTypeAccess().getRule();
	}

	//enum PresentationType:
	//	text | radio | checkbox | combo | list | textarea | date | related | embedded_object | group | folder;
	public PresentationTypeElements getPresentationTypeAccess() {
		return (unknownRulePresentationType != null) ? unknownRulePresentationType : (unknownRulePresentationType = new PresentationTypeElements());
	}
	
	public EnumRule getPresentationTypeRule() {
		return getPresentationTypeAccess().getRule();
	}

	//enum AttributePropertyName:
	//	x | y | colspan | rowspan | disabled | icon | width | height | tooltip | group | visibleInEdition | visibleInGrid |
	//	content | value | validValues | validation | required | max_length | min_length | range | mask | event | toString |
	//	onetomany | manytoone | transient | folder | presentation_type | sequence;
	public AttributePropertyNameElements getAttributePropertyNameAccess() {
		return (unknownRuleAttributePropertyName != null) ? unknownRuleAttributePropertyName : (unknownRuleAttributePropertyName = new AttributePropertyNameElements());
	}
	
	public EnumRule getAttributePropertyNameRule() {
		return getAttributePropertyNameAccess().getRule();
	}

	//enum OperationPropertyName:
	//	disabled | icon | tooltip | visible | file | validWhen | is_filter | validate;
	public OperationPropertyNameElements getOperationPropertyNameAccess() {
		return (unknownRuleOperationPropertyName != null) ? unknownRuleOperationPropertyName : (unknownRuleOperationPropertyName = new OperationPropertyNameElements());
	}
	
	public EnumRule getOperationPropertyNameRule() {
		return getOperationPropertyNameAccess().getRule();
	}

	//enum ObjectPropertyName:
	//	open_filtering | event_handler;
	public ObjectPropertyNameElements getObjectPropertyNameAccess() {
		return (unknownRuleObjectPropertyName != null) ? unknownRuleObjectPropertyName : (unknownRuleObjectPropertyName = new ObjectPropertyNameElements());
	}
	
	public EnumRule getObjectPropertyNameRule() {
		return getObjectPropertyNameAccess().getRule();
	}

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
