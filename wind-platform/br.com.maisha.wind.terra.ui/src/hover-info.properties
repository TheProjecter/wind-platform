sequence=<b>Sequence</b><p>The order of this folder</p>
x=<b>X</b><p>Position of this attribute in the <b>x</b> axis.</p>
y=<b>Y</b><p>Position of this attribute in the <b>y</b> axis.</p>
colspan=<b>Column Span</b><p>Table cells can span across more than one column. This property indicate how many columns a cell should take up</p>
rowspan=<b>Row Span</b><p>Table cells can span down more than one row. This property indicate how many rows a cell should take up</p>
disabled=<b>Disabled</b><p>Indicates whether it's presentation attribute should disabled to the user</p><p>Allows an expression as value: ${this.someAttr eq 'someValue'}</p>
icon=<b>Icon</b><p>The path of an image that will be used as icon representation</p>
width=<b>Width</b><p>How large it will be presented</p>
height=<b>Height</b><p>How high it will be presented</p>
tooltip=<b>Tooltip</b><p>A text that describes this attribute to the user</p>
group=<b>Group</b><p>The name of the group where it will be contained</p>
visibleInEdition=<b>Visible In Edition</b><p>Indicates whether it should be visible in the Edition View</p><p>Allows an expression as value: ${this.someAttr eq 'someValue'}</p>
visibleInGrid=<b>Visible In Grid</b><p>Indicates whether it should be visible in the Grid View</p><p>Allows an expression as value: ${this.someAttr eq 'someValue'}</p>
content=<b>Content</b><p>Used to provide data when using combos, related and embedded presentation type.</p><p><a href="">More on using content rules</a></p>
value=<b>Value</b><p>Initial value.</p>
validValues=<b>Valid Values</b><p>Static array used to populate combos.</p><p>Example:</p><p>validValues: ["Male", "Female"]</p><p><a href="">More on using content rules</a></p>
validation=<b>Validation</b><p></p>
required=<b>Required</b><p>Whether this attribute is required or not</p><p>Allows an expression as value: ${this.someAttr eq 'someValue'}</p>
max_length=<b>Maximum Length</b><p>The maximum number of character allowed</p>               
min_length=<b>Minimum Length</b><p>The minimum number of character required</p>
range=<b>Range</b><p></p>
mask=<b>Mask</b><p>Mask to be used to filter input. </p><p>Examples: </p><ul><li>Telephone: (##) ####-####</li></ul>
event=<b>Event</b><p></p>
toString=<b>To String</b><p>Indicates if this attribute should be included when generating a textual representation of this Domain Object</p>
onetomany=<b>One To Many</b><p>One to many relationship</p>
manytoone=<b>Many To One</b><p>Many to one relationship</p>
transient=<b>Transient</b><p>Ignores this attribute in the persistent layer.</p>
folder=<b>Folder</b><p>Name of the folder where it will be contained</p>
presentation_type=<b>Presentation Type</b><p>Type of the graphical representation rendered to used interact with this attribute. </p><p>Possible values: </p><ul><li>text</li><li>radio</li><li>checkbox</li><li>combo</li><li>list</li><li>textarea</li><li>date</li><li>related</li><li>embedded_object</li><li>group</li><li>folder</li><ul>
visible=<b>Visible</b><p>Indicates whether it should be visible</p><p>Allows an expression as value: ${this.someAttr eq 'someValue'}</p>
file=<b>File</b><p>Path of the file that contains the code to be executed for this operation</p>
validWhen=<b>Valid When</b><p></p>
is_filter=<b>Is Filter</b><p>Indicates if this is a filter rule. See <b>open_filtering</b></p>
validate=<b>Validate</b><p>Indicates if the model should be validated before execute this rule.</p>
open_filtering=<b>Open Filtering</b><p>Indicates if this object should execute a filter rule at opening</p>
event_handler=<b>Event Handler</b><p>A class that handles events fired during a Domain Object's lifecycle</p>
	   
	   